swagger: '2.0'
info:
  title: CTI Dashboard API
  description: API for managing Cyber Threat Intelligence data.
  version: 1.0.0
host: YOUR_API_GATEWAY_HOST_WILL_GO_HERE
schemes:
  - https
produces:
  - application/json

x-google-backend:
  address: https://europe-west2-cti-dashboard-459422.cloudfunctions.net/api # Your Cloud Function's base URL
  path_translation: APPEND_PATH_TO_ADDRESS # The magic setting
  protocol: h2

paths:
  /health:
    get:
      summary: Health Check for the API Gateway and Backend
      operationId: healthCheckGateway
      responses:
        '200':
          description: OK

  /server-time:
    get:
      summary: Get current server time from the backend
      operationId: getServerTimeGateway
      responses:
        '200':
          description: OK

  /firestore-test:
    get:
      summary: Test Firestore Connection
      operationId: testFirestoreGateway
      responses:
        '200':
          description: Test document fetched successfully.
        '201':
          description: Test document created and fetched successfully.
        '500':
          description: Internal Server Error.

  # --- Organizations API Paths ---
  /organizations:
    post:
      summary: Create a new organization
      operationId: createOrganization
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name: { type: string }
              description: { type: string }
            required:
              - name
      responses:
        '201':
          description: Organization created successfully
        '400':
          description: Invalid input

    get:
      summary: Get all organizations
      operationId: listOrganizations
      responses:
        '200':
          description: A list of organizations

  /organizations/{organizationId}:
    get:
      summary: Get a specific organization by ID
      operationId: getOrganizationById
      parameters:
        - name: organizationId
          in: path
          required: true
          type: string
          description: ID of the organization to retrieve
      responses:
        '200':
          description: Organization data
        '404':
          description: Organization not found

    put:
      summary: Update an existing organization
      operationId: updateOrganization
      parameters:
        - name: organizationId
          in: path
          required: true
          type: string
          description: ID of the organization to update
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name: { type: string }
              description: { type: string }
              status: { type: string }
      responses:
        '200':
          description: Organization updated successfully
        '404':
          description: Organization not found
        '400':
          description: Invalid input

    delete:
      summary: Delete an organization
      operationId: deleteOrganization
      parameters:
        - name: organizationId
          in: path
          required: true
          type: string
          description: ID of the organization to delete
      responses:
        '204':
          description: Organization deleted successfully
        '404':
          description: Organization not found

  # --- Users API Paths ---
  /users:
    post:
      summary: Create a new user
      operationId: createUser
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              googleId: { type: string }
              email: { type: string }
              firstName: { type: string }
              lastName: { type: string }
              profilePictureUrl: { type: string }
              role: { type: string, enum: ['admin', 'editor', 'viewer'] } # Example enum
              organizationId: { type: string }
            required:
              - googleId
              - email
              - firstName
              - lastName
              - role
              - organizationId
      responses:
        '201':
          description: User created successfully
        '400':
          description: Invalid input

    get:
      summary: Get all users
      operationId: listUsers
      parameters:
        - name: organizationId
          in: query
          required: false
          type: string
          description: Optional filter by organization ID
      responses:
        '200':
          description: A list of users

  /users/{userId}:
    get:
      summary: Get a specific user by ID
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          required: true
          type: string
          description: ID of the user to retrieve
      responses:
        '200':
          description: User data
        '404':
          description: User not found

    put:
      summary: Update an existing user
      operationId: updateUser
      parameters:
        - name: userId
          in: path
          required: true
          type: string
          description: ID of the user to update
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              firstName: { type: string }
              lastName: { type: string }
              profilePictureUrl: { type: string }
              role: { type: string, enum: ['admin', 'editor', 'viewer'] }
              organizationId: { type: string }
              status: { type: string, enum: ['active', 'inactive'] }
      responses:
        '200':
          description: User updated successfully
        '404':
          description: User not found
        '400':
          description: Invalid input

    delete:
      summary: Delete a user
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          required: true
          type: string
          description: ID of the user to delete
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found
